// -------------------------------------------------- //
// This file is autogenerated by pioasm; do not edit! //
// -------------------------------------------------- //

#pragma once

#if !PICO_NO_HARDWARE
#include "hardware/pio.h"
#endif

// ---- //
// jtag //
// ---- //

#define jtag_wrap_target 0
#define jtag_wrap 4

static const uint16_t jtag_program_instructions[] = {
            //     .wrap_target
    0x80a0, //  0: pull   block                      
    0xe027, //  1: set    x, 7                       
    0x7801, //  2: out    pins, 1         side 1     
    0xf000, //  3: set    pins, 0         side 0     
    0x0042, //  4: jmp    x--, 2                     
            //     .wrap
};

#if !PICO_NO_HARDWARE
static const struct pio_program jtag_program = {
    .instructions = jtag_program_instructions,
    .length = 5,
    .origin = -1,
};

static inline pio_sm_config jtag_program_get_default_config(uint offset) {
    pio_sm_config c = pio_get_default_sm_config();
    sm_config_set_wrap(&c, offset + jtag_wrap_target, offset + jtag_wrap);
    sm_config_set_sideset(&c, 2, true, false);
    return c;
}

#include "hardware/gpio.h"
static inline void pio_jtag_init(PIO pio, uint sm, uint prog_offs) {
    pio_sm_config c = jtag_program_get_default_config(prog_offs);
    sm_config_set_sideset_pins(&c, 1);
    sm_config_set_set_pins(&c,0,1);
    sm_config_set_out_pins(&c, 0, 1);
    //sm_config_set_out_shift(&c, false, true, 8);
    //sm_config_set_in_shift(&c, false, true, 8);
    sm_config_set_clkdiv(&c, 10.0);
    //pio_sm_set_pins_with_mask(pio, sm, 0xffffffff , 0xffffffff); //tck = 1 (sideset pin)  data = 0 (set pin)
    pio_sm_set_pindirs_with_mask(pio, sm, (1u << 0) | (1u << 1) | (1u << 2), (1u << 0) | (1u << 1) | (1u << 2));
    pio_gpio_init(pio, 0);
    pio_gpio_init(pio, 1);
    //pio_gpio_init(pio, 2);;
    pio_sm_init(pio, sm, prog_offs, &c);
    pio_sm_set_enabled(pio, sm, true);
}

#endif

