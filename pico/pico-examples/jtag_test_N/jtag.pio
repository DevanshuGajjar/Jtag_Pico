;
; Copyright (c) 2020 Raspberry Pi (Trading) Ltd.
;
; SPDX-License-Identifier: BSD-3-Clause
;
.program ir_init
.side_set 1 opt
pull block
set x 0b0
loop:
    set pins, 1 side 1 
    set pins, 0 side 0
    set pins, 1 side 1
    set pins, 0 side 0
    set pins, 0 side 1
    set pins, 0 side 0
    set pins, 0 side 1
    set pins, 0 side 0 
    jmp x-- loop


.program ir_deinit
.side_set 1 opt
pull block
set x 0b0
loop:
    set pins, 1 side 1
    set pins, 0 side 0
    set pins, 1 side 1
    set pins, 0 side 0
    set pins, 1 side 1
    set pins, 0 side 0

    jmp x-- loop


.program datareg_init
.side_set 1 opt
pull block
set y 0b0
loop:
    set pins, 1 side 1 
    set pins, 0 side 0
    set pins, 0 side 1
    set pins, 0 side 0
    set pins, 0 side 1
    set pins, 0 side 0
    jmp y-- loop


.program datareg_deinit
.side_set 1 opt
pull block
set y 0b0
loop:
    set pins, 1 side 1
    set pins, 0 side 0
    set pins, 1 side 1
    set pins, 0 side 0
    set pins, 1 side 1
    set pins, 0 side 0
    jmp y-- loop




.program jtag
.side_set 1 opt
pull block
set x, 0b0111
loop:
    out pins, 1 side 1; dataregive pin high and then delay for one cycle
    set pins, 0 side 0 ;
    in pins,1   side 0 
    jmp x-- loop      ; Set PC to label `again`
    push


% c-sdk {
#include "hardware/gpio.h"
static inline void pio_jtag_init(PIO pio, uint sm, uint prog_offs) {
    pio_sm_config c = jtag_program_get_default_config(prog_offs);
    sm_config_set_sideset_pins(&c,1);
    sm_config_set_set_pins(&c,0,1);
    sm_config_set_out_pins(&c, 0, 1);
    sm_config_set_in_pins(&c, 2);
    sm_config_set_out_shift(&c, true, false,8 );
    sm_config_set_in_shift(&c, true, false,8 );
    //sm_config_set_out_shift(&c, false, true, 16);
    sm_config_set_clkdiv(&c, 10.0);

    pio_sm_set_pindirs_with_mask(pio, sm, (1u << 0) | (1u << 1) , (1u << 0) | (1u << 1) | (1u << 2));
    pio_gpio_init(pio, 0);
    pio_gpio_init(pio, 1);
    pio_gpio_init(pio, 2);
    pio_sm_init(pio, sm, prog_offs, &c);
    pio_sm_set_enabled(pio, sm, true);
}

 static inline void pio_ir_init_init(PIO pio, uint sm, uint prog_offs) {
    pio_sm_config c = ir_init_program_get_default_config(prog_offs);
    //TCK pin
    sm_config_set_sideset_pins(&c, 1);
    //TMS Pin
    sm_config_set_set_pins(&c,3, 1);
    sm_config_set_clkdiv(&c, 10.0);
    pio_sm_set_pindirs_with_mask(pio, sm, (1u << 1)|(1u << 3), (1u << 1)|(1u << 3));
    pio_gpio_init(pio, 3);
    pio_gpio_init(pio, 1);
    pio_sm_init(pio, sm, prog_offs, &c);
    pio_sm_set_enabled(pio, sm, true);
}

 static inline void pio_ir_deinit_init(PIO pio, uint sm, uint prog_offs) {
    pio_sm_config c = ir_deinit_program_get_default_config(prog_offs);
    //TCK pin
    sm_config_set_sideset_pins(&c, 1);
    //TMS Pin
    sm_config_set_set_pins(&c,3, 1);
    sm_config_set_out_pins(&c,0, 1);

    sm_config_set_clkdiv(&c, 10.0);
    pio_sm_set_pindirs_with_mask(pio, sm, (1u << 1)|(1u << 3)| (1u << 0), (1u << 1)|(1u << 3) | (1u << 0));
    pio_gpio_init(pio, 3);
    pio_gpio_init(pio, 1);
    pio_gpio_init(pio, 0);
    pio_sm_init(pio, sm, prog_offs, &c);
    pio_sm_set_enabled(pio, sm, true);
}

static inline void pio_datareg_init_init(PIO pio, uint sm, uint prog_offs) {
    pio_sm_config c = datareg_init_program_get_default_config(prog_offs);
    //TCK pin
    sm_config_set_sideset_pins(&c, 1);
    //TMS Pin
    sm_config_set_set_pins(&c,3, 1);
    sm_config_set_clkdiv(&c, 10.0);
    pio_sm_set_pindirs_with_mask(pio, sm, (1u << 1)|(1u << 3), (1u << 1)|(1u << 3));
    pio_gpio_init(pio, 3);
    pio_gpio_init(pio, 1);
    pio_sm_init(pio, sm, prog_offs, &c);
    pio_sm_set_enabled(pio, sm, true);
}

 static inline void pio_datareg_deinit_init(PIO pio, uint sm, uint prog_offs) {
    pio_sm_config c = datareg_deinit_program_get_default_config(prog_offs);
    //TCK pin
    sm_config_set_sideset_pins(&c, 1);
    //TMS Pin
    sm_config_set_set_pins(&c,3, 1);
    sm_config_set_out_pins(&c,0, 1);

    sm_config_set_clkdiv(&c, 10.0);
    pio_sm_set_pindirs_with_mask(pio, sm, (1u << 1)|(1u << 3)| (1u << 0), (1u << 1)|(1u << 3) | (1u << 0));
    pio_gpio_init(pio, 3);
    pio_gpio_init(pio, 1);
    pio_gpio_init(pio, 0);
    pio_sm_init(pio, sm, prog_offs, &c);
    pio_sm_set_enabled(pio, sm, true);
}


%}
